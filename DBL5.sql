-- Q1 a
SELECT EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME 
FROM EMPLOYEES, DEPARTMENTS
WHERE EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;
--INNER JOIN DEPARTMENTS 
--ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

-- Q1 b
SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_ID, DEPARTMENT_NAME 
FROM EMPLOYEES
JOIN DEPARTMENTS
USING (DEPARTMENT_ID);

-- Q1 c
SELECT EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME 
FROM EMPLOYEES
JOIN DEPARTMENTS
ON EMPLOYEES.DEPARTMENT_ID =  DEPARTMENTS.DEPARTMENT_ID;

-- Q1 d
SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_ID, DEPARTMENT_NAME 
FROM EMPLOYEEs
NATURAL JOIN DEPARTMENTS;

-- Q1 e
-- The first three queries have three 106 rows while the last one has 32 rows only. 
-- This is because natural join matches all rows
-- The Employees and Departments table have manager_id as a common attribute too,
-- which the natural join merges as well, resulting in a lower amount of rows. 
-- Other joins use just the specified rows to merge.

-- Q1 f
-- Natural join would not be appropriate because according to it, there would be 
-- no common rows to merge. Other joins would be better where we specify the 
-- names.

-- Q2
SELECT EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, DEPARTMENTS.DEPARTMENT_NAME, LOCATIONS.CITY, LOCATIONS.STATE_PROVINCE
FROM ((EMPLOYEES 
INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID) 
INNER JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID);

-- Q3 
SELECT EMPLOYEES.FIRST_NAME, EMPLOYEES.LAST_NAME, EMPLOYEES.SALARY, JOBS.JOB_TITLE
FROM EMPLOYEES
INNER JOIN JOBS
ON EMPLOYEES.JOB_ID = JOBS.JOB_ID;

-- Q4
SELECT CONCAT(CONCAT(EMPLOYEES.FIRST_NAME, ' '), EMPLOYEES.LAST_NAME) AS Full_Name, DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
INNER JOIN DEPARTMENTS 
ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
WHERE DEPARTMENTS.DEPARTMENT_NAME IN ('Finance', 'Accounting');

-- Q5
SELECT CONCAT(CONCAT(EMPLOYEES.FIRST_NAME, ' '), EMPLOYEES.LAST_NAME) AS Full_Name,  
    DEPARTMENTS.DEPARTMENT_NAME, EMPLOYEES.JOB_ID, 
    CONCAT(CONCAT(LOCATIONS.CITY, ' '), LOCATIONS.STATE_PROVINCE) AS LOCATION
FROM ((EMPLOYEES
INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID)
INNER JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID);

-- Q6
SELECT CONCAT(CONCAT(EMPLOYEES.FIRST_NAME, ' '), EMPLOYEES.LAST_NAME) AS Full_Name,  
    DEPARTMENTS.DEPARTMENT_NAME, EMPLOYEES.JOB_ID, 
    CONCAT(CONCAT(LOCATIONS.CITY, ' '), LOCATIONS.STATE_PROVINCE) AS Location
FROM ((EMPLOYEES
INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID)
INNER JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID)
WHERE LOCATIONS.CITY LIKE 'S%';

-- Q7
SELECT EMPLOYEES.*, CONCAT(CONCAT(M.FIRST_NAME, ' '), M.LAST_NAME) AS Manager_Name
FROM EMPLOYEES 
inner JOIN EMPLOYEES M
ON EMPLOYEES.MANAGER_ID = M.EMPLOYEE_ID;

-- Q8
SELECT DEPARTMENTS.DEPARTMENT_NAME, LOCATIONS.CITY, LOCATIONS.STATE_PROVINCE 
FROM DEPARTMENTS
INNER JOIN LOCATIONS 
ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID
WHERE DEPARTMENTS.DEPARTMENT_NAME LIKE '%ing';

-- Q9
SELECT CONCAT(CONCAT(EMPLOYEES.FIRST_NAME, ' '), EMPLOYEES.LAST_NAME) AS Full_Name,  
    DEPARTMENTS.DEPARTMENT_ID, DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
LEFT JOIN DEPARTMENTS 
ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
WHERE DEPARTMENTS.DEPARTMENT_ID IS NULL;

-- Q10
SELECT DEPARTMENTS.DEPARTMENT_NAME
FROM DEPARTMENTS
LEFT JOIN EMPLOYEES
ON EMPLOYEES.EMPLOYEE_ID = DEPARTMENTS.DEPARTMENT_ID
WHERE EMPLOYEES.EMPLOYEE_ID IS NULL;  
    
-- Q11
SELECT CONCAT(CONCAT(EMPLOYEES.FIRST_NAME, ' '), EMPLOYEES.LAST_NAME) AS EMPLOYEE_Full_Name,
    CONCAT(CONCAT(M.FIRST_NAME, ' '), M.LAST_NAME) AS MANAGER_Full_Name
FROM EMPLOYEES
LEFT JOIN EMPLOYEES M
ON M.EMPLOYEE_ID = EMPLOYEES.MANAGER_ID;

-- Q12
SELECT *
FROM EMPLOYEES
LEFT JOIN EMPLOYEES M
ON M.EMPLOYEE_ID = EMPLOYEES.MANAGER_ID
WHERE EMPLOYEES.MANAGER_ID IS NULL;

-- Q13
SELECT DEPARTMENTS.DEPARTMENT_NAME, LOCATIONS.LOCATION_ID, LOCATIONS.STREET_ADDRESS, 
    LOCATIONS.POSTAL_CODE, LOCATIONS.CITY, LOCATIONS.STATE_PROVINCE, COUNTRIES.COUNTRY_NAME, 
    REGIONS.REGION_NAME
FROM (((DEPARTMENTS 
INNER JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID)
INNER JOIN COUNTRIES ON LOCATIONS.COUNTRY_ID = COUNTRIES.COUNTRY_ID)
INNER JOIN REGIONS ON COUNTRIES.REGION_ID = REGIONS.REGION_ID);
    
-- Q14
SELECT CONCAT(CONCAT(EMPLOYEES.FIRST_NAME, ' '), EMPLOYEES.LAST_NAME) AS EMPLOYEE_Full_Name
FROM EMPLOYEES
LEFT JOIN EMPLOYEES M
ON M.EMPLOYEE_ID = EMPLOYEES.MANAGER_ID
WHERE EMPLOYEES.SALARY > M.SALARY;

-- Q15
SELECT CONCAT(CONCAT(EMPLOYEES.FIRST_NAME, ' '), EMPLOYEES.LAST_NAME) AS EMPLOYEE_Full_Name,
    JOBS.JOB_TITLE, DEPARTMENTS.DEPARTMENT_NAME, EMPLOYEES.HIRE_DATE
FROM EMPLOYEES
INNER JOIN JOBS ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
WHERE EMPLOYEES.HIRE_DATE BETWEEN TO_DATE('01-JAN-1993', 'DD-MM-YYYY') AND TO_DATE('01-12-1993', 'DD-MM-YYYY');

-- Q16
SELECT EMPLOYEES.*, DEPARTMENTS.*
FROM EMPLOYEES
FULL OUTER JOIN DEPARTMENTS 
ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

-- Q17
SELECT AVG(EMPLOYEES.SALARY), DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
INNER JOIN DEPARTMENTS
ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID
GROUP BY DEPARTMENTS.DEPARTMENT_NAME;

-- Q18
SELECT CONCAT(CONCAT(EMPLOYEES.FIRST_NAME, ' '), EMPLOYEES.LAST_NAME) AS EMPLOYEE_Full_Name,
    JOBS.JOB_TITLE, (JOBS.MAX_SALARY - EMPLOYEES.SALARY) AS Salary_Difference
--    , EMPLOYEES.SALARY, JOBS.MAX_SALARY
FROM EMPLOYEES
INNER JOIN JOBS
ON EMPLOYEES.JOB_ID = JOBS.JOB_ID
ORDER BY (JOBS.MAX_SALARY - EMPLOYEES.SALARY) DESC;

-- Q19
SELECT JOBS.JOB_TITLE, COUNT(EMPLOYEES.JOB_ID)
FROM JOBS
LEFT JOIN EMPLOYEES
ON JOBS.JOB_ID = EMPLOYEES.JOB_ID
GROUP BY JOB_TITLE;

-- Q20
SELECT LOCATIONS.CITY, COUNT(DEPARTMENTS.DEPARTMENT_ID)
FROM DEPARTMENTS 
INNER JOIN LOCATIONS 
ON LOCATIONS.LOCATION_ID = DEPARTMENTS.LOCATION_ID
GROUP BY LOCATIONS.CITY;
